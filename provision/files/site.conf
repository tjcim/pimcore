# Based off the "Production" Example Here
# https://pimcore.com/docs/pimcore/current/Development_Documentation/Installation_and_Upgrade/System_Setup_and_Hosting/Nginx_Configuration.html

upstream php-pimcore6 {
  server unix:/var/run/php/php7.4-fpm.sock;
}

server {
  listen 8085;

  root /var/www/pimcore/web;
  index index.php;

  ### HTTP Headers
  server_tokens off;
  # add_header Content-Security-Policy "default-src 'self';" always;
  add_header Referrer-Policy same-origin;
  add_header Feature-Policy "geolocation 'none';midi 'none';sync-xhr 'none';microphone 'none';camera 'none';magnetometer 'none';gyroscope 'none';fullscreen 'self';payment 'none';";
  add_header Permissions-Policy "geolocation=(), midi=(), sync-xhr=(), microphone=(), camera=(), magnetometer=(), gyroscope=(), fullscreen=(self), payment=()";
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Xss-Protection "1; mode=block" always;
  add_header X-Content-Type-Options "nosniff" always;
  #/ HTTP Headers

  client_max_body_size 100m;
  rewrite ^(/protected/.*) /app.php$is_args$args last;

  location ~ ^/var/.*/protected(.*) {
    return 403;
  }

  location ~ ^/cache-buster\-[\d]+/protected(.*) {
    return 403;
  }

  # Pimcore Head-Link Cache-Busting
  rewrite ^/cache-buster-(?:\d+)/(.*) /$1 last;

  # a) don't allow PHP in folders allowing file uploads
  location ~* /var/assets/.*\.php(/|$) {
    return 404;
  }

  # b) Prevent clients from accessing hidden files (starting with a dot)
  location ~* /\.(?!well-known/) {
    deny all;
    log_not_found off;
    access_log off;
  }

  # c) Prevent clients from accessing to backup/config/source files
  location ~* (?:\.(?:bak|conf(ig)?|dist|fla|in[ci]|log|psd|sh|sql|sw[op])|~)$ {
    deny all;
  }

  # Some Admin Modules need this:
  # Database Admin, Server Info
  location ~* ^/admin/(adminer|external) {
    rewrite .* /app.php$is_args$args last;
  }

  # Thumbnails
  location ~* .*/(image|video)-thumb__\d+__.* {
    try_files /var/tmp/$1-thumbnails$uri /app.php;
    expires 2w;
    access_log off;
    add_header Cache-Control "public";
  }

  # Assets
  # Still use a whitelist approach to prevent each and every missing asset to go through the PHP Engine.
  location ~* ^(?!/admin)(.+?)\.((?:css|js)(?:\.map)?|jpe?g|gif|png|svgz?|eps|exe|gz|zip|mp\d|ogg|ogv|webm|pdf|docx?|xlsx?|pptx?)$ {
    try_files /var/assets$uri $uri =404;
    expires 2w;
    access_log off;
    log_not_found off;
    add_header Cache-Control "public";
  }

  location / {
    error_page 404 /meta/404;
    try_files $uri /app.php$is_args$args;
  }

  # Use this location when the installer has to be run
  # location ~ /(app|install)\.php(/|$) {
  #
  # Use this after initial install is done:
  location ~ ^/app\.php(/|$) {
    send_timeout 1800;
    fastcgi_read_timeout 1800;
    # regex to split $uri to $fastcgi_script_name and $fastcgi_path
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    # Check that the PHP script exists before passing it
    # try_files $fastcgi_script_name =404;
    # include fastcgi.conf if needed
    include snippets/fastcgi-php.conf;
    # Bypass the fact that try_files resets $fastcgi_path_info
    # see: http://trac.nginx.org/nginx/ticket/321
    set $path_info $fastcgi_path_info;
    fastcgi_param PATH_INFO $path_info;

    # Activate these, if using Symlinks and opcache
    # fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    # fastcgi_param DOCUMENT_ROOT $realpath_root;

    fastcgi_pass php-pimcore6;
    # Prevents URIs that include the front controller. This will 404:
    # http://domain.tld/app.php/some-path
    # Remove the internal directive to allow URIs like this
    internal;
  }

  # PHP-FPM Status and Ping
  location /fpm- {
    access_log off;
    include fastcgi_params;
    location /fpm-status {
      allow 127.0.0.1;
      # add additional IP's or Ranges
      deny all;
      fastcgi_pass php-pimcore6;
    }
    location /fpm-ping {
      fastcgi_pass php-pimcore6;
    }
  }

  # nginx Status
  # see: https://nginx.org/en/docs/http/ngx_http_stub_status_module.html
  location /nginx-status {
    allow 127.0.0.1;
    deny all;
    access_log off;
    stub_status;
  }
}
